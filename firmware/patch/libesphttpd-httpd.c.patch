--- ./core/httpd.c
+++ ./core/httpd.c
@@ -5,9 +5,9 @@ Esp8266 http server - core routines
 /*
  * ----------------------------------------------------------------------------
  * "THE BEER-WARE LICENSE" (Revision 42):
- * Jeroen Domburg <jeroen@spritesmods.com> wrote this file. As long as you retain 
- * this notice you can do whatever you want with this stuff. If we meet some day, 
- * and you think this stuff is worth it, you can buy me a beer in return. 
+ * Jeroen Domburg <jeroen@spritesmods.com> wrote this file. As long as you retain
+ * this notice you can do whatever you want with this stuff. If we meet some day,
+ * and you think this stuff is worth it, you can buy me a beer in return.
  * ----------------------------------------------------------------------------
  */
 
@@ -15,6 +15,7 @@ Esp8266 http server - core routines
 #include <esp8266.h>
 #include "httpd.h"
 #include "httpd-platform.h"
+#include "httpdespfs.h"
 
 //This gets set at init time.
 static HttpdBuiltInUrl *builtInUrls;
@@ -83,7 +84,7 @@ const char ICACHE_FLASH_ATTR *httpdGetMimetype(char *url) {
 	char *ext=url+(strlen(url)-1);
 	while (ext!=url && *ext!='.') ext--;
 	if (*ext=='.') ext++;
-	
+
 	//ToDo: strcmp is case sensitive; we may want to do case-intensive matching here...
 	while (mimeTypes[i].ext!=NULL && strcmp(ext, mimeTypes[i].ext)!=0) i++;
 	return mimeTypes[i].mimetype;
@@ -163,7 +164,7 @@ int ICACHE_FLASH_ATTR httpdUrlDecode(char *val, int valLen, char *ret, int retLe
 //Find a specific arg in a string of get- or post-data.
 //Line is the string of post/get-data, arg is the name of the value to find. The
 //zero-terminated result is written in buff, with at most buffLen bytes used. The
-//function returns the length of the result, or -1 if the value wasn't found. The 
+//function returns the length of the result, or -1 if the value wasn't found. The
 //returned string will be urldecoded already.
 int ICACHE_FLASH_ATTR httpdFindArg(char *line, char *arg, char *buff, int buffLen) {
 	char *p, *e;
@@ -234,9 +235,9 @@ void ICACHE_FLASH_ATTR httpdStartResponse(HttpdConnData *conn, int code) {
 	const char *connStr="Connection: close\r\n";
 	if (conn->priv->flags&HFL_CHUNKED) connStr="Transfer-Encoding: chunked\r\n";
 	if (conn->priv->flags&HFL_NOCONNECTIONSTR) connStr="";
-	l=sprintf(buff, "HTTP/1.%d %d OK\r\nServer: esp8266-httpd/"HTTPDVER"\r\n%s", 
-			(conn->priv->flags&HFL_HTTP11)?1:0, 
-			code, 
+	l=sprintf(buff, "HTTP/1.%d %d OK\r\nServer: esp8266-httpd/"HTTPDVER"\r\n%s",
+			(conn->priv->flags&HFL_HTTP11)?1:0,
+			code,
 			connStr);
 	httpdSend(conn, buff, l);
 }
@@ -276,11 +277,18 @@ int ICACHE_FLASH_ATTR cgiRedirect(HttpdConnData *connData) {
 
 //Used to spit out a 404 error
 static int ICACHE_FLASH_ATTR cgiNotFound(HttpdConnData *connData) {
+	// Serve up the not found page instead of returning a line of text.
+	connData->cgiArg = "/not_found.html";
+
+	return cgiEspFsHook(connData);
+
+	/*
 	if (connData->conn==NULL) return HTTPD_CGI_DONE;
 	httpdStartResponse(connData, 404);
 	httpdEndHeaders(connData);
 	httpdSend(connData, "404 File not found.", -1);
 	return HTTPD_CGI_DONE;
+	*/
 }
 
 //This CGI function redirects to a fixed url of http://[hostname]/ if hostname field of request isn't
@@ -548,7 +556,7 @@ static void ICACHE_FLASH_ATTR httpdProcessRequest(HttpdConnData *conn) {
 			httpd_printf("%s not found. 404!\n", conn->url);
 			conn->cgi=cgiNotFound;
 		}
-		
+
 		//Okay, we have a CGI function that matches the URL. See if it wants to handle the
 		//particular URL we're supposed to handle.
 		r=conn->cgi(conn);
@@ -577,7 +585,7 @@ static void ICACHE_FLASH_ATTR httpdProcessRequest(HttpdConnData *conn) {
 static void ICACHE_FLASH_ATTR httpdParseHeader(char *h, HttpdConnData *conn) {
 	int i;
 	char firstLine=0;
-	
+
 	if (strncmp(h, "GET ", 4)==0) {
 		conn->requestType = HTTPD_METHOD_GET;
 		firstLine=1;
@@ -592,7 +600,7 @@ static void ICACHE_FLASH_ATTR httpdParseHeader(char *h, HttpdConnData *conn) {
 
 	if (firstLine) {
 		char *e;
-		
+
 		//Skip past the space after POST/GET
 		i=0;
 		while (h[i]!=' ') i++;
